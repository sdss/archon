# REQUIRED. A dictionary of controller name to Archon controller connection parameters.
controllers:
  sp1:                         # Name of the controller.
    host: 10.7.45.26
    port: 4242
    parameters:                # Parameters for readout and fetching.
      lines: 2040              # Number of lines per amplifier.
      pixels: 2040             # Number of pixels per line.
      overscan_pixels: 20      # Number of overscan pixels.
      taps_per_detector: 4     # Number of amplifiers per detector.
      framemode: split         # Archon frame mode. split or top.
    detectors:                 # List of detector per controller.
      r1:                      # The names of the detectors are required.
        serial: STA29687       # The parameters for each of them are optional.
        gain: 2.82
        readnoise: 3
        type: STA4850
      b1:
        serial: STA29602
        gain: 2.81
        readnoise: 3
        type: STA4850
      z1:
        serial: STA27875
        gain: 2.88
        readnoise: 3
        type: STA4850

# REQUIRED. The base directory where the data will be saved (and MJD subdirectory is
# always added) and the format of the saved filename. Available placeholders are
# {observatory} which is replaced with "apo" or "lco", {hemisphere} replaced with "n" if
# the observatory is "apo" and "s" if "lco", {controller} which is replaced with the
# name of the Archon controller defined above, {ccd} which is the name do the CCD
# (including the controller identifier), and {exposure} which is a never-repeating
# sequence identifier. "split" controls whether the CCD frames from each controller are
# saved as individual files or as different HDU extensions inside the FITS file.
files:
  data_dir: '/data/spectro/lvm'
  split: true
  template: 'sdR-{hemisphere}-{ccd}-{exposure_no:08d}.fits.gz'

# OPTIONAL. Additional header keywords to be obtained from the SYSTEM and STATUS
# commands. The {sensor} placeholder will be filled out with the sensor value for the
# detector. If the value of the header keyword is a list, it must be [value, comment].
# It can also be a mapping of detector name to [value, comment]. If a third element is
# used it will be considered the floating point precision.
header:
  status:
    CCDTEMP1:
      r1: ['status.mod2/tempa', 'Temperature of the sensor (HEATERX 2)', 2]
      b1: ['status.mod12/tempc', 'Temperature of the sensor (HEATERX 12)', 2]
      z1: ['status.mod12/tempa', 'Temperature of the sensor (HEATERX 12)', 2]
    CCDTEMP2:
      r1: ['status.mod2/tempb', 'LN2 temperature (HEATERX 2)', 2]
      b1: ['status.mod2/tempc', 'LN2 temperature (HEATERX 2)', 2]
      z1: ['status.mod12/tempb', 'LN2 temperature (HEATERX 12)', 2]

# REQUIRED. Actor congiguration for the actor class
actor:
  name: archon
  host: localhost
  port: 5672

# REQUIRED. Various timeout values.
timeouts:
  controller_connect: 5
  write_config_timeout: 2
  write_config_delay: 0.0001
  expose_timeout: 2
  readout_expected: 40
  readout_max: 60
  fetching_expected: 5
  fetching_max: 10
  flushing: 1.2

# REQUIRED.
archon:
  # Archon firmware parameters to be set when the controller is reset.
  default_parameters:
    HorizontalBinning: 1
    VerticalBinning: 1
  # This is the ACF configuration file to be loaded to the Archon including the timing
  # script. {archon_etc} gets completed with the path of the etc directory once
  # installed. If the path is not absolute, the root of the package is used as working
  # directory.
  archon:
    config_file: 'lvm/config/archon/LVM_100MHz.acf'
